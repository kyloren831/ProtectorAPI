@model IEnumerable<ProtectorAPP.Models.UsuarioViewModel>

@{
    ViewData["Title"] = "Index";
}

<div class="main-container">

    <div class="row bg-primary tittle d-flex justify-content-between">
        <div class="col text-white">
            <h1>Gestion de Usuarios</h1>
        </div>
        <div class="col">

        </div>
        <div class="col-auto py-2">
            <a asp-action="Create" asp-controller="Usuarios" class="btn text-white" style="background-color:#f97316">
                <i class="fas fa-plus"></i> Agregar nuevo
            </a>
        </div>
    </div>

    @* Mostrar mensaje de éxito si existe *@
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @* Mostrar mensaje de error si existe *@
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    <table class="table">
        <thead>
            <tr>
                <th>
                    Usuario
                </th>
               
                <th>
                    @Html.DisplayNameFor(model => model.FechaCreacion)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Estado)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
           
                @foreach (var item in Model)
                {
                <tr>
                    <td>
                        <div class="d-flex align-items-center">
                            <!-- Imagen redonda con ajuste -->
                            <img src="@Url.Content(item.FotoUrl)" alt="Imagen de usuario" class="rounded-circle" style="width: 40px; height: 40px; object-fit: cover; margin-right: 10px;">

                            <!-- Contenedor de texto -->
                            <div class="d-flex flex-column text-start">
                                <div>
                                        @Html.DisplayFor(modelItem => item.Nombre)
                                </div>
                                <div>
                                        @Html.DisplayFor(modelItem => item.Correo)
                                </div>
                            </div>
                        </div>
                    </td>


                    <td>
                            @Html.DisplayFor(modelItem => item.FechaCreacion)
                    </td>
                    <td>
                            @if (item.Estado.ToString().Equals("A"))
                            {
                            <div class="td-activo d-flex justify-content-center"> Activo </div>
                            }
                            else
                            {
                            <div class="td-inactivo d-flex justify-content-center"> Inactivo </div>
                            }
                    </td>


                    <td>
                        <a type="button" class="btn btn-details" asp-controller="Usuarios" asp-action="Details" asp-route-id="@item.IdUsuario">
                            <i class="fas fa-eye"></i>
                        </a>
                        <a type="button" class="btn btn-edit" asp-controller="Usuarios" asp-action="Edit" asp-route-id="@item.IdUsuario">
                            <i class="fas fa-edit"></i>
                        </a>
                            @{
                                string IDModal = "L" + item.IdUsuario;
                            }

                        <!-- Button trigger modal -->
                        <button type="button" class="btn btn-off" data-bs-toggle="modal" data-bs-target="#@IDModal">
                            <i class="fas fa-power-off"></i>
                        </button>

                        <!-- Modal -->
                        <div class="modal fade" id="@IDModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="exampleModalLabel">Confirmar acción</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        ¿Desea cambiar el estado de @item.Nombre?
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>

                                        <!-- Formulario para cambiar estado -->
                                        <form asp-controller="Usuarios" asp-action="CambiarEstado" method="post" asp-route-id="@item.IdUsuario">
                                            <button type="submit" class="btn btn-primary">Guardar</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </td>
                </tr>
                }
            
            
        </tbody>
    </table>
   
   

</div>
@section Styles {
    <link rel="stylesheet" href="~/css/Usuarios/Index.css" />
}

@section Scripts{
    <script>
        let userId = null;

        // Función para abrir el modal y almacenar el ID del usuario
        function abrirModalCambioEstado(id, nombre) {
            userId = id;
            userName= nombre;
            // Mostrar el modal
            document.getElementById('mensajeModal').textContent = `¿Estás seguro de que deseas cambiar el estado de ${userName}?`;
            $('#modalCambioEstado').modal('show');
        }
        function cerrarModal(id) {
            userId = 0;
            // Mostrar el modal
            $('#modalCambioEstado').modal('hide');
        }
        // Función para hacer la solicitud PATCH y cambiar el estado del usuario
        async function cambiarEstadoUsuario() {
            try {
                const response = await fetch(`/Usuarios/CambiarEstado?id=${userId}`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                });
                // Log para ver la respuesta completa
                console.log('Response:', response);


                const data = await response.json();

                if (data.success) {
                    // Si la respuesta es exitosa, mostramos el mensaje y cerramos el modal
                    document.getElementById('mensajeModal').textContent = data.message;
                    setTimeout(() => {
                        $('#modalCambioEstado').modal('hide');
                        location.reload(); // Recargamos la página para ver el cambio
                    }, 1500);
                } else {
                    // Si la respuesta es un error, mostramos el mensaje de error
                    document.getElementById('mensajeModal').textContent = data.message;
                }
            } catch (error) {
                // Si hay un error en la solicitud
                document.getElementById('mensajeModal').textContent = 'Hubo un problema al realizar la solicitud.';
            }
        }
    </script>
}